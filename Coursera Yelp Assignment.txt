Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera WorksheetThis is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.Part 1: Yelp Dataset Profiling and Understanding1. Profile the data by finding the total number of records for each of the tables below:i. Attribute table = 10000ii. Business table = 10000iii. Category table = 10000iv. Checkin table = 10000v. elite_years table = 10000vi. friend table = 10000vii. hours table = 10000viii. photo table = 10000ix. review table = 10000x. tip table = 10000xi. user table = 100002. Find the total distinct records by either the foreign key or primary key for each table. If two foreign keys are listed in the table, please specify which foreign key.i. Business = 10000ii. Hours = 1562iii. Category = 2643iv. Attribute = 1115v. Review = 10000vi. Checkin = 493vii. Photo = 10000viii. Tip = 537 (user_id)ix. User = 10000x. Friend = 11xi. Elite_years = 2780Note: Primary Keys are denoted in the ER-Diagram with a yellow key icon.3. Are there any columns with null values in the Users table? Indicate "yes," or "no."
Answer: NoSQL code used to arrive at answer:SELECT count(*) FROM UserWhere coalesce(id, name, review_count, yelping_since, useful, funny, cool, fans, average_stars, compliment_hot, compliment_more, compliment_profile, compliment_cute, compliment_list, compliment_note,compliment_plain, compliment_cool, compliment_funny, compliment_writer, compliment_photos) is Null4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:i. Table: Review, Column: Starsmin:1	max: 5	avg: 3.7082ii. Table: Business, Column: Starsmin:1	max:5	avg:3.6549iii. Table: Tip, Column: Likesmin:0	max:2	avg:0.0144iv. Table: Checkin, Column: Countmin:1	max:53	avg:1.9414v. Table: User, Column: Review_countmin:0	max:2000	avg:24.29955. List the cities with the most reviews in descending order: SQL code used to arrive at answer:SELECT city, SUM(review_count) AS Number_Of_ReviewsFROM businessGROUP BY cityORDER BY Number_Of_Reviews DESC            Copy and Paste the Result Below:	+-----------------+-------------------+| city            | Number_Of_Reviews |+-----------------+-------------------+| Las Vegas       |             82854 || Phoenix         |             34503 || Toronto         |             24113 || Scottsdale      |             20614 || Charlotte       |             12523 || Henderson       |             10871 || Tempe           |             10504 || Pittsburgh      |              9798 || Montréal        |              9448 || Chandler        |              8112 || Mesa            |              6875 || Gilbert         |              6380 || Cleveland       |              5593 || Madison         |              5265 || Glendale        |              4406 || Mississauga     |              3814 || Edinburgh       |              2792 || Peoria          |              2624 || North Las Vegas |              2438 || Markham         |              2352 || Champaign       |              2029 || Stuttgart       |              1849 || Surprise        |              1520 || Lakewood        |              1465 || Goodyear        |              1155 |+-----------------+-------------------+6. Find the distribution of star ratings to the business in the following cities:i. AvonSQL code used to arrive at answer:SELECT name, city, stars, review_countFROM businessWHERE city = 'Avon'Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):+-----------------------------------------------+------+-------+--------------+| name                                          | city | stars | review_count |+-----------------------------------------------+------+-------+--------------+| Helen & Kal's                                 | Avon |   2.5 |            3 || Marc's                                        | Avon |   4.0 |            4 || Hoban Pest Control                            | Avon |   5.0 |            3 || Light Salon & Spa                             | Avon |   3.5 |            7 || Portrait Innovations                          | Avon |   1.5 |           10 || Winking Lizard Tavern                         | Avon |   3.5 |           31 || Dervish Mediterranean & Turkish Grill         | Avon |   4.5 |           31 || Mulligans Pub and Grill                       | Avon |   3.5 |           50 || Mr. Handyman of Cleveland's Northwest Suburbs | Avon |   2.5 |            3 || Cambria hotel & suites Avon - Cleveland       | Avon |   4.0 |           17 |+-----------------------------------------------+------+-------+--------------+ii. BeachwoodSQL code used to arrive at answer:SELECT name, city, stars, review_countFROM businessWHERE city = 'Beachwood'Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):+---------------------------------+-----------+-------+--------------+| name                            | city      | stars | review_count |+---------------------------------+-----------+-------+--------------+| Maltz Museum of Jewish Heritage | Beachwood |   3.0 |            8 || Charley's Grilled Subs          | Beachwood |   3.0 |            3 || Sixth & Pine                    | Beachwood |   4.5 |           14 || Beechmont Country Club          | Beachwood |   5.0 |            6 || Hyde Park Prime Steakhouse      | Beachwood |   4.0 |           69 || Origins                         | Beachwood |   4.5 |            3 || Fyodor Bridal Atelier           | Beachwood |   5.0 |            4 || College Planning Network        | Beachwood |   2.0 |            8 || Lucky Brand Jeans               | Beachwood |   3.5 |            3 || American Eagle Outfitters       | Beachwood |   3.5 |            3 || Shaker Women's Wellness         | Beachwood |   5.0 |            6 || Avis Rent A Car                 | Beachwood |   2.5 |            3 || Cleveland Acupuncture           | Beachwood |   5.0 |            3 || Studio Mz                       | Beachwood |   5.0 |            4 |+---------------------------------+-----------+-------+--------------+
7. Find the top 3 users based on their total number of reviews: SQL code used to arrive at answer:SELECT name, review_countFROM userOrder by review_count DESCLimit 3Copy and Paste the Result Below:+--------+--------------+| name   | review_count |+--------+--------------+| Gerald |         2000 || Sara   |         1629 || Yuri   |         1339 |+--------+--------------+8. Does posting more reviews correlate with more fans?Please explain your findings and interpretation of the results:I would argue that there is not a concrete correlation. If we look at Gerald, he has 2000 reviews, but only 253 fans. On the other hand, Amy has 609 reviews, and 503 fans. Other factors should be considered.9. Are there more reviews with the word "love" or with the word "hate" in them?Answer:Hate = 232Love = 1780More reviews have the word “Love”SQL code used to arrive at answer:SELECT count(text) as Reviews_With_HateFROM reviewWhere text like '%hate%'SELECT count(text) as Reviews_With_LoveFROM reviewWhere text like '%love%'10. Find the top 10 users with the most fans: SQL code used to arrive at answer:SELECT name, fansFROM userOrder by fans DESCLimit 10Copy and Paste the Result Below:		+-----------+------+| name      | fans |+-----------+------+| Amy       |  503 || Mimi      |  497 || Harald    |  311 || Gerald    |  253 || Christine |  173 || Lisa      |  159 || Cat       |  133 || William   |  126 || Fran      |  124 || Lissa     |  120 |+-----------+------+Part 2: Inferences and Analysis1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.i. Do the two groups you chose to analyze have a different distribution of hours?SELECT b.city, b.stars, b.name, c.category, h.hoursFROM Business b INNER JOIN category c ON b.id = c.business_idINNER JOIN hours h ON b.id = h.business_idWhere b.city = 'Las Vegas' and stars IN('2','3')Group By hoursOrder by name DESCSELECT b.city, b.stars, b.name, c.category, h.hoursFROM Business b INNER JOIN category c ON b.id = c.business_idINNER JOIN hours h ON b.id = h.business_idWhere b.city = 'Las Vegas' and stars IN('4','5')Group By hoursOrder by name DESCThe 2-3 star businesses are open for more days and longer hours compared to the 4-5 star businesses in Las Vegas. I believe this is mainly because the 2-3 star businesses are fast food joints.ii. Do the two groups you chose to analyze have a different number of reviews?SELECT b.city, b.stars, b.name, b.review_count, c.category, h.hoursFROM Business b INNER JOIN category c ON b.id = c.business_idINNER JOIN hours h ON b.id = h.business_idWhere b.city = 'Las Vegas' and stars IN('2', '3', '4','5')Group By review_countOrder By stars DESCIn the city of Las Vegas, Wingstop is the only 2-3 star place. They have a toal of 123 reviews. 75% of the 4-5 star businesses in Las Vegas have less than or equal to 30 reviews with a couple outliers (Jacques Café and Big Wong Restaurant) coming in at 168 and 768 reviews. Overall, it appears that the higher star businesses have smaller review counts.iii. Are you able to infer anything from the location data provided between these two groups? Explain.SQL code used for analysis:SELECT b.city, b.stars, b.name, b.review_count, c.category, h.hoursFROM Business b INNER JOIN category c ON b.id = c.business_idINNER JOIN hours h ON b.id = h.business_idWhere b.city = 'Las Vegas' and stars IN('2', '3', '4','5')Group By categoryOrder by nameThe businesses in Las Vegas are heavily diversified by category. There is not much competition between different businesses. According to this dataset, it would be a great place to start a new business due to the lack of competition. 2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.i. Difference 1:Businesses that are open have a higher average review count (31.75) compared to businesses that are closed (23.20).ii. Difference 2:	Businesses that are open have higher average stars (3.68) compared to businesses that are closed (3.52).SQL code used for analysis:SELECT COUNT(DISTINCT(id)), AVG(review_count), AVG(stars), is_openFROM businessGROUP BY is_open3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:i. Indicate the type of analysis you chose to do:I am interested in determining the most popular cuisine on Yelp.ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:		In my analysis, popularity depends on the number of reviews, number of stars, and overall number of restaurants in that category. I will need to retrieve review_count, stars, and the count of Business_ID for that category in order to conduct my analysis. The categories I will be analyzing are Chinese, Mexican, Italian, Korean, Japanese, and Indian.iii. Output of your finished dataset:+----------+---------------------+---------------------------+-----------------------+| category | Average_Star_Rating | Average_Number_Of_Reviews | Number_Of_Restaurants |+----------+---------------------+---------------------------+-----------------------+| Korean   |                 4.5 |                       8.0 |                     7 || Chinese  |       3.76923076923 |             423.230769231 |                    13 || Mexican  |               3.625 |                      73.0 |                    28 || Indian   |                 3.5 |                      32.0 |                     6 || Italian  |       3.53846153846 |             78.2307692308 |                    13 || Japanese |               3.475 |                     22.85 |                    20 |+----------+---------------------+---------------------------+-----------------------+iv. Provide the SQL code you used to create your final dataset:SELECT c.category, avg(b.stars) AS Average_Star_Rating, avg(b.review_count) AS Average_Number_Of_Reviews, count(b.id) AS Number_Of_RestaurantsFROM Business b INNER JOIN category c ON b.id = c.business_idINNER JOIN hours h ON b.id = h.business_idWhere c.category IN ('Chinese', 'Mexican', 'Italian', 'Korean', 'Japanese', 'Indian')Group By categoryOrder by stars DESC